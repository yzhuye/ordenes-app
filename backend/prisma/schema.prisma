generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Order {
  id              Int           @id @default(autoincrement())
  contactName     String        @db.VarChar(100)
  contactEmail    String        @db.VarChar(255)
  contactPhone    String        @db.VarChar(20)
  country         String        @db.VarChar(100)
  city            String        @db.VarChar(100)
  zipCode         String        @db.VarChar(20)
  deliveryAddress String        @db.VarChar(255)
  notes           String?       @db.VarChar(200)
  totalPrice      Decimal       @db.Decimal(10, 2)
  paymentMethod   PaymentMethod @default(CARD)
  isActive        Boolean       @default(true)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  discountId      Int?
  fee             Decimal       @db.Decimal(10, 2)
  subtotal        Decimal       @db.Decimal(10, 2)
  items           OrderItem[]
  discount        Discount?     @relation(fields: [discountId], references: [id], onDelete: Restrict)

  @@map("orders")
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String      @unique @db.VarChar(100)
  description String      @db.VarChar(255)
  price       Decimal     @db.Decimal(10, 2)
  isActive    Boolean     @default(true)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  orderItems  OrderItem[]

  @@map("products")
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Decimal  @db.Decimal(10, 2)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product  @relation(fields: [productId], references: [id])

  @@unique([orderId, productId])
  @@map("order_items")
}

model Discount {
  id         Int       @id @default(autoincrement())
  code       String    @unique @db.VarChar(100)
  discount   Decimal   @db.Decimal(10, 2)
  validUntil DateTime? @db.Date
  isActive   Boolean   @default(true)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  orders     Order[]

  @@map("discounts")
}

enum PaymentMethod {
  CARD
  CASH
  BANK_TRANSFER
  DIGITAL_WALLET
}
